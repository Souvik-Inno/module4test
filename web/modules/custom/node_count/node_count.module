<?php

/**
 * @file
 * Contains hooks for node view count incement.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_node_count_count_incremented().
 */
function node_count_node_count_count_incremented($current_count, NodeInterface $node) {
  if ($current_count === 1) {
    \Drupal::messenger()->addMessage(t('Thank you for viewing the %title for the first time', ['%title' => $node->label()]));
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function node_count_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if (\Drupal::currentUser()->isAnonymous()) {
    $session = \Drupal::request()->getSession();
    $current_counts = $session->get('node_count.view_counts', []);
    if (!isset($current_counts[$entity->id()])) {
      $current_counts[$entity->id()] = 1;
    }
    else {
      $current_counts[$entity->id()]++;
    }
    $session->set('node_count.view_counts', $current_counts);
    $module_handler = \Drupal::moduleHandler();
    $module_handler->invokeAll(
      'node_count_count_incremented',
      [$current_counts[$entity->id()], $entity]
    );
    $build['view_count'] = [
      '#markup' => '<p>' . t('You have viewed this node @total times this session.', ['@total' => $current_counts[$entity->id()]]) . '</p>',
      '#cache' => [
        'tags' => $entity->getCacheTags(),
        'contexts' => $entity->getCacheContexts(),
      ],
    ];
  }
}
